class Thing {
	public String name;
	//Static variables only have one copy and it can only be accessed by the class
	public static String description;
	public void showName(){
		System.out.println("Name: " +name);
	}
	//declaring static method
	public static void showInfo(){
		System.out.println("Description: "+ description);
		// This: System.out.println(name); wont work because its not static and there 
		//are two objects like thing1 and thing2 objects which are used to declare it 
		// and being static method , it cannot happen.
	}
	
}
public class Application {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		//Static variables can not be initialized using objects, they can only be
		//called using the class name like this:	
		Thing.description = "I am a thing";
		System.out.println("Thing.description: "+Thing.description);
		Thing thing1 = new Thing();
		Thing thing2 = new Thing();
		// where are public variables can be set using objects and each
		//object gets a copy, These variables are instance variables, for
		//example "name"
		thing1.name = "Bob";
		thing2.name = "Sue";
		System.out.println("Thing1.name: " + thing1.name );
		System.out.println("Thing2.name: "+ thing2.name);
		System.out.print("thing1.showName():");
		thing1.showName();
		//calling static method
		System.out.print("Static method showinfo: ");
		Thing.showInfo();
	}

}
